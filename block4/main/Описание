1080. Раскраска карты 

Неориентированный граф, представленный в программе матрицей смежности M[][]. Все страны хранятся индексами (номер-1, just in case). memset'ом заполняется состояние по умолчанию false - нет связи. 
head - индекс страны, С которой смотрим границу, голова одна. 
tail - индекс страны, К которой смотрим границу, хвостов может быть много (разнообразие велико: от 0 до всех кроме себя). 
!M[cur][i] - если связи нет (страны не граничны), страна i в контексте страны cur нам не интересна. 
color[i]==-1 - страну еще не красили (default value) - видим такую, добавляем в цепочку дальнейшего рассмотрения (Q[tail++]=i) и красим в цвет противный соседу (1-0=1 или 1-1=0), если же страна крашена, но её цвет совпадает с цветом текущей (а они соседи, раз уж мы на них смотрим в такой паре), то мы проиграли. 


1450. Российские газопроводы 

Ориентированный однонаправленный граф, представленный как массив векторов. Индекс - номер станции. В векторах DEST хранятся номера станций, куда из станции с этим номером можно прийти напрямую. В векторах WORTH хранятся прибыльности этих маршрутов. (Перейти с номеров на индексы в данной задаче помешала громоздкость - слишком много [больше одного на один элемент] декрементов.) Массив MEM[] заполняется значением по умолчанию -1. 
Для 1<=i<N (количество станций) верно, что MEM[i] равно (либо, либо): 
1) сумме прибыли, получаемой при прохождении маршрута от этой станции до финальной (с номером F); 
2) -2, если с этой станции до станции F добраться нельзя 
3) -1 во всех остальных случаях (например, эта станция не была нами рассмотрена) 
Решение рекурсивно. Спускаемся с станции S по всем возможным направлениям (в случае их наличия, естественно), рекурсивно вызываемся на этих направлениях, в конце концов доходим до одного из двух вариантов: 
1) с этой станции до нужной дойти нельзя; 
2) это и есть нужная станция. 
В 1 случае все плохо, устанавливаем соотвествтующий МЕМ (через указатель profit) в -2 (а если быть точным, то оставляем его -2, так как в более удачном случае мы меняем это значение) и уходим, во 2 случае получаем, что путь (и прибыль с пути в самого себя) равна 0 и поднимаеся вверх, считая предыдущие элементы пути, накапливая их WORTH в aux, выбрав максимальный из aux и profit, мы получим прибыльность самого выгодного маршрута. 


1160. Network

Исходные данные представляют собой неориентированный граф. Представим его в виде двух массивов: один для хранения вершин, другой для хранения ребер. Для того, чтобы соединить все наши вершины и получить при этом минимальную общую длину всех ребер их соединяющих, нам необходимо построить минимальное остовное дерево. Применяем для этого алгоритм Краскала






1162. Currency Exchange 

Типы валют - вершины двунаправленного ориентированного графа (двунаправленность важна, так как не гарантируется равноценность обменов из А в Б и из Б в А, честно говоря, её абуз - одна из основ стратегии обогащения Ника). 
nodes[S]=V; S - тип валюты, V - количество валюты. 
N-1 раз играем в менялу и проходим по графу, пытаясь узнать, что лучше: поменять по предложенному курсу и комиссии или остаться при своих (выбираем максимальное из этих двух). Далее делаем последнюю N-ную мену и проверяем, стоила ли игра свеч: если существует цепочка обменов, после которой Ник заимел количество денег больше, чем до этого + 0,00001 (единственное желание относительно этого числа "пусть прибыль будет больше, чем эта малая величина"), то он богач и все здорово. Нет - жаль. 




javascript:void(var field = document.getElementById("_iapsportletlab7_WAR_iapsportlet_var"); field.value='797'; );



                            javascript:void(document.getElementById('_iapsportletlab7_WAR_iapsportlet_var').value='797');



javascript:function $(w){
    w.document.getElementById('_iapsportletlab7_WAR_iapsportlet_var').value='797';
    }
    $(this)

    avascript:function $(w){
    var field = w.document.getElementById('_iapsportletlab7_WAR_iapsportlet_var');



    field.value='797';
    field.onchange(field);
    field.change(field);
    field.onkeypress(field);

    

    }
    $(this)


    _iapsportletlab7_WAR_iapsportlet_setVar(797);
    field.onchange(field);
    field.change(field);
    field.onkeypress(field);
    _iapsportletlab7_WAR_iapsportlet_submitOnEnter(evt, 797)

avascript:function $(w){
    var field = w.document.getElementById('_iapsportletlab7_WAR_iapsportlet_var');

	
	field.value='797';

    _iapsportletlab7_WAR_iapsportlet_setVar(field.value);
  	}
    $(this)



field.focus();
	field.value='797';
    field.input();
    field.change();

	field.blur();


var event = new Event("focus");
  	field.dispatchEvent(event);



  	<a href="https://se.ifmo.ru/disciplines/iaps#lab7"><a href="https://se.ifmo.ru/disciplines/iaps#lab7; javascript:void(var field = document.getElementById(\"_iapsportletlab7_WAR_iapsportlet_var\"); field.value='797'; );">Вариант 797</a></a>
                        

<a href="javascript:function $(w){"
void(w.location.replace('https://se.ifmo.ru/disciplines/iaps#lab7'));
var field = w.document.getElementById('_iapsportletlab7_WAR_iapsportlet_var');

field.value='797';
}
$(this)">Вариант 797</a>